def startTime = System.currentTimeMillis()
import java.util.concurrent.TimeUnit
import java.net.URLEncoder
import java.nio.charset.StandardCharsets
def jenkinsUrl = env.JENKINS_URL
echo "${jenkinsUrl}"
def cause = currentBuild.getBuildCauses('hudson.model.Cause$UserIdCause')
echo "userName: ${cause.userName}"
def jenkins_build_user_name = cause.userName
def get_email_for_user_id(user_id) {
    def user = hudson.model.User.get(user_id)
    return user.getProperty(hudson.tasks.Mailer.UserProperty).getAddress()
}
def jenkins_build_user_email
def build_user_id
if (cause.userName instanceof List && cause.userName.isEmpty()) {
    jenkins_build_user_email = 'timer@advatix.com'
} else {
    build_user_id = currentBuild.rawBuild.getCauses()[0].getUserId()
    jenkins_build_user_email = get_email_for_user_id(build_user_id)
}
println "userid: ${jenkins_build_user_name}"
println "build_user_id: ${build_user_id}"
println "build_user_email: ${jenkins_build_user_email}"
echo "userName: ${cause.userName}"
echo "jenkins_build_user_email: ${jenkins_build_user_email}"
def jobUrl = env.JOB_URL
def jobName = env.JOB_NAME
println "jenkinsUrl: ${jenkinsUrl}"
println "jobUrl: ${jobUrl}"
println "jobName: ${jobName}"
def jobDescription = jobUrl
def redColor = 'red' // Color variable Red
def greenColor = 'green' // Color variable Green
def email_to = "${jenkins_build_user_email}"
def email_cc = "swatantra.srivastava@advatix.com"
def email_bcc = "swatantra.srivastava@advatix.com"
def webhook_url = "https://advatix1.webhook.office.com/webhookb2/87b0cd1f-00b1-42bc-8600-c7428f884919@42ece415-7f11-4b12-ad5d-a5b2a9a75839/JenkinsCI/c0f01557dd7f4012a9efeb7be7a90480/ca2853c7-42f9-477d-b599-0082b5ae0e3c"
pipeline {
    options {
        buildDiscarder(logRotator(numToKeepStr: '10'))
        ansiColor('xterm')
    }
     agent any
     tools {
         nodejs "node"
     }

    stages {
        stage('LOAD TESTING') {
            steps {
                bat "echo %CD%"
                    bat "echo %CD%"
                    bat "npm cache clean --force"
                    bat 'node --version'
                    bat 'npm i'
                    script {
                        try {
                            bat 'npm run %Script%'
                        } catch (err) {
                            echo err.getMessage()
                            echo "Some test cases are getting Failed"
                        }
                    }
                }
            }




  }
    

    post {
    always {
        script {


            try {
    def item = Jenkins.instance.getItemByFullName(env.JOB_NAME)
    def itemDescription = item.getDescription()
    def endTime = System.currentTimeMillis()
    def duration = endTime - startTime
    def durationString = String.format("%d min, %d sec",
            TimeUnit.MILLISECONDS.toMinutes(duration),
            TimeUnit.MILLISECONDS.toSeconds(duration) % 60
    )
    def JOB_NAME = "${env.JOB_NAME}"
      mail (
                            to: email_to,
                            cc: email_cc,
                            bcc: email_bcc,
                            subject: " ${env.JOB_NAME}(${durationString}) Testing Result",
                            body: """<p><strong> Execution Time : </strong>  ${durationString}</p>
                                     <p><strong> Jenkins build run by  : </strong>  ${jenkins_build_user_name}</p>
                                     <p><strong> List of flows covered by FRONTEND AUTOMATION in this build : </strong>  ${itemDescription}</p>
                                     <p><strong> Automation Test Cases Result report : </strong>  <a href="${BUILD_URL}/execution/node/8/ws/3pl_cypress/reports/index.html">Frontend Automation Cucumber Test Result</a></p>
                                     <p><strong> Automation Test Cases Video link for reference  : </strong>  <a href="${env.BUILD_URL}/execution/node/8/ws/3pl_cypress/cypress/videos/">Click here to check the videos</a></p>
                                     <p><strong> Check logs :</strong>  <a href="${env.BUILD_URL}/console">Click here to check the console output logs</a></p> @automation_poc""",,
                            mimeType: 'text/html'
                        )
} catch (err) {
    echo err.getMessage()
    // No need for this line: echo "Some test cases are getting Failed"
}


        }
    }
}
}