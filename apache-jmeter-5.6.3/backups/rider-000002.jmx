<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group">
        <intProp name="ThreadGroup.num_threads">10</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <longProp name="ThreadGroup.duration">3600</longProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">4</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="customer_data_csv_config">
          <stringProp name="delimiter">,</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="filename">/Users/shipsy/Desktop/jmeter/customer_data.csv</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="variableNames">username,password</stringProp>
        </CSVDataSet>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="soft_data_creation" enabled="true">
          <stringProp name="HTTPSampler.domain">demodashboardapi.shipsy.in</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/api/customer/integration/consignment/softdata</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;is_international&quot;: false,&#xd;
    &quot;consignments&quot;: [&#xd;
        {&#xd;
            &quot;customer_code&quot;: &quot;RITIKA01&quot;,&#xd;
            &quot;reference_number&quot;: &quot;&quot;,&#xd;
            &quot;description&quot;: &quot;description&quot;,&#xd;
            &quot;load_type&quot;: &quot;DOCUMENT&quot;,&#xd;
            &quot;commodity_id&quot;: &quot;&quot;,&#xd;
            &quot;customer_reference_number&quot;: &quot;reference&quot;,&#xd;
            &quot;service_type_id&quot;: &quot;PREMIUM&quot;,&#xd;
            &quot;declared_value&quot;: &quot;&quot;,&#xd;
            &quot;weight&quot;: &quot;1&quot;,&#xd;
            &quot;destination_details&quot;: {&#xd;
                &quot;name&quot;: &quot;Ankit Giri&quot;,&#xd;
                &quot;phone&quot;: &quot;9532777575&quot;,&#xd;
                &quot;address_line_1&quot;: &quot;8B, Sakinaka Tele Exchange Lane&quot;,&#xd;
                &quot;address_line_2&quot;: &quot;Saki Naka&quot;,&#xd;
                &quot;pincode&quot;: &quot;500026&quot;,&#xd;
                &quot;city&quot;: &quot;Mumbai&quot;,&#xd;
                &quot;state&quot;: &quot;Maharashtra&quot;,&#xd;
                &quot;country&quot;: &quot;India&quot;,&#xd;
                &quot;alternate_phone&quot;: &quot;9532777575&quot;&#xd;
            },&#xd;
            &quot;origin_details&quot;: {&#xd;
                &quot;name&quot;: &quot;Ritika Nath&quot;,&#xd;
                &quot;phone&quot;: &quot;9532777575&quot;,&#xd;
                &quot;address_line_1&quot;: &quot;Infant Jesus Church, Bazaar St&quot;,&#xd;
                &quot;address_line_2&quot;: &quot;Kalinga Housing Society, Kaju Pada, Kurla West&quot;,&#xd;
                &quot;pincode&quot;: &quot;560047&quot;,&#xd;
                &quot;city&quot;: &quot;Mumbai&quot;,&#xd;
                &quot;state&quot;: &quot;Maharashtra&quot;,&#xd;
                &quot;country&quot;: &quot;India&quot;,&#xd;
                &quot;alternate_phone&quot;: &quot;9532777575&quot;&#xd;
            },&#xd;
            &quot;pieces_detail&quot;: [&#xd;
                {&#xd;
                    &quot;length&quot;: &quot;10&quot;,&#xd;
                    &quot;width&quot;: &quot;10&quot;,&#xd;
                    &quot;height&quot;: &quot;1&quot;&#xd;
                }&#xd;
            ]&#xd;
        }&#xd;
    ]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="api-key" elementType="Header">
                <stringProp name="Header.name">api-key</stringProp>
                <stringProp name="Header.value">7ba4f4ac9956b61361a2af176bd8ec</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-855485422">&quot;status&quot;:&quot;OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">reference_number</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;reference_number&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="rider_login" enabled="true">
          <stringProp name="HTTPSampler.domain">demodashboardapi.shipsy.in</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/api/RiderApp/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;password&quot;: &quot;1234&quot;,&#xd;
    &quot;username&quot;: &quot;heavydriver1&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="organisation-id" elementType="Header">
                <stringProp name="Header.name">organisation-id</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="x-app-version" elementType="Header">
                <stringProp name="Header.name">x-app-version</stringProp>
                <stringProp name="Header.value">249</stringProp>
              </elementProp>
              <elementProp name="user-id" elementType="Header">
                <stringProp name="Header.name">user-id</stringProp>
                <stringProp name="Header.value">1295561743434516159</stringProp>
              </elementProp>
              <elementProp name="x-app-flavor" elementType="Header">
                <stringProp name="Header.name">x-app-flavor</stringProp>
                <stringProp name="Header.value">demo</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">access_token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:{&quot;id&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-855485422">&quot;status&quot;:&quot;OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="prepare_prs" enabled="true">
          <stringProp name="HTTPSampler.domain">demodashboardapi.shipsy.in</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/api/RiderApp/prepareDRS</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;consignments&quot;: [&#xd;
        {&#xd;
            &quot;reference_number&quot;: &quot;${reference_number}&quot;,&#xd;
            &quot;transaction_id&quot;: &quot;${__time(yyyyMMddHHmmssSSS)}&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;worker_id&quot;: &quot;1295561743434516159&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="user-id" elementType="Header">
                <stringProp name="Header.name">user-id</stringProp>
                <stringProp name="Header.value">1295561743434516159</stringProp>
              </elementProp>
              <elementProp name="access-token" elementType="Header">
                <stringProp name="Header.name">access-token</stringProp>
                <stringProp name="Header.value">${access_token}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="organisation-id" elementType="Header">
                <stringProp name="Header.name">organisation-id</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="x-app-version" elementType="Header">
                <stringProp name="Header.name">x-app-version</stringProp>
                <stringProp name="Header.value">94</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-855485422">&quot;status&quot;:&quot;OK</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">task_id</stringProp>
            <stringProp name="RegexExtractor.regex">  &quot;task_id&quot;: &quot;(.+?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number"></stringProp>
            <boolProp name="RegexExtractor.default_empty_value">false</boolProp>
          </RegexExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="consignment_status_multiple" enabled="true">
          <stringProp name="HTTPSampler.domain">demodashboardapi.shipsy.in</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.path">/api/RiderApp/updateConsignmentStatusMultiple</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;bulk_array&quot;: [&#xd;
        {&#xd;
            &quot;accuracy&quot;: &quot;13.846&quot;,&#xd;
            &quot;address_type&quot;: &quot;Commercial&quot;,&#xd;
            &quot;address_type_id&quot;: &quot;ID_COMMERCIAL&quot;,&#xd;
            &quot;consignments&quot;: [&#xd;
                {&#xd;
                    &quot;allow_number_masking&quot;: false,&#xd;
                    &quot;isSelfAdded&quot;: false,&#xd;
                    &quot;is_cod&quot;: false,&#xd;
                    &quot;is_partial_delivery&quot;: false,&#xd;
                    &quot;is_rescheduled&quot;: false,&#xd;
                    &quot;kyc_image_taken&quot;: false,&#xd;
                    &quot;poc_not_taken&quot;: false,&#xd;
                    &quot;reference_number&quot;: &quot;${reference_number}&quot;,&#xd;
                    &quot;signature_not_taken&quot;: true,&#xd;
                    &quot;taskIsChecked&quot;: false,&#xd;
                    &quot;task_id&quot;: &quot;${task_id}&quot;,&#xd;
                    &quot;transaction_id&quot;: &quot;${__time(yyyyMMddHHmmssSSS)}&quot;,&#xd;
                    &quot;trip_id&quot;: &quot;&quot;&#xd;
                }&#xd;
            ],&#xd;
            &quot;delivery_shipping_charges&quot;: 0,&#xd;
            &quot;isSelf&quot;: false,&#xd;
            &quot;isUpdatedThroughSMS&quot;: false,&#xd;
            &quot;is_retained&quot;: false,&#xd;
            &quot;lat&quot;: &quot;28.4764394&quot;,&#xd;
            &quot;lng&quot;: &quot;77.0112636&quot;,&#xd;
            &quot;location_captured_at&quot;: &quot;1617105040366&quot;,&#xd;
            &quot;photoPath&quot;: &quot;/storage/emulated/0/Android/data/com.shipsy.riderapp.demo/cache/Rider/images/IMG_20210330_172108431.tat&quot;,&#xd;
            &quot;receiver_name&quot;: &quot;&quot;,&#xd;
            &quot;receiver_phone&quot;: &quot;7042773602&quot;,&#xd;
            &quot;status&quot;: &quot;delivered&quot;&#xd;
        }&#xd;
    ],&#xd;
    &quot;worker_id&quot;: &quot;1295561743434516143&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="user-id" elementType="Header">
                <stringProp name="Header.name">user-id</stringProp>
                <stringProp name="Header.value">1295561743434516159</stringProp>
              </elementProp>
              <elementProp name="access-token" elementType="Header">
                <stringProp name="Header.name">access-token</stringProp>
                <stringProp name="Header.value">${access_token}</stringProp>
              </elementProp>
              <elementProp name="organisation-id" elementType="Header">
                <stringProp name="Header.name">organisation-id</stringProp>
                <stringProp name="Header.value">1</stringProp>
              </elementProp>
              <elementProp name="x-app-version" elementType="Header">
                <stringProp name="Header.name">x-app-version</stringProp>
                <stringProp name="Header.value">249</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings"/>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <TestAction guiclass="TestActionGui" testclass="TestAction" testname="Flow Control Action" enabled="true">
          <intProp name="ActionProcessor.action">1</intProp>
          <intProp name="ActionProcessor.target">2</intProp>
          <stringProp name="ActionProcessor.duration">50000</stringProp>
        </TestAction>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <Summariser guiclass="SummariserGui" testclass="Summariser" testname="Generate Summary Results" enabled="true"/>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
